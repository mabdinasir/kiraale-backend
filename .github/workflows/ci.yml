name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
        types: [closed]

env:
    AWS_REGION: ${{ secrets.AWS_REGION }}
    ECR_REPO: ${{ secrets.EASTLEIGH_REAL_ESTATE_ECR_REPOSITORY_URI }}
    CLUSTER: ${{ secrets.EASTLEIGH_REAL_ESTATE_ECS_CLUSTER_NAME }}
    SERVICE: ${{ secrets.EASTLEIGH_REAL_ESTATE_ECS_SERVICE_NAME }}

jobs:
    lint-and-format:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: node-modules-${{ hashFiles('package-lock.json') }}

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint

            - name: Run Prettier
              run: npm run fmt:check

    build-and-deploy:
        needs: lint-and-format
        runs-on: ubuntu-latest
        environment: production
        steps:
            - uses: actions/checkout@v4

            # Configure AWS credentials
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.EASTLEIGH_REAL_ESTATE_ECS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.EASTLEIGH_REAL_ESTATE_ECS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            # Login to Amazon ECR
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            # Build and push the Docker image
            - name: Build and Push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ env.ECR_REPO }}:latest
                  platforms: linux/arm64

            - name: Force Deployment
              run: |
                  aws ecs update-service \
                    --cluster $CLUSTER \
                    --service $SERVICE \
                    --force-new-deployment
